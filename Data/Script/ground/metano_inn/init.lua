--[[
    init.lua
    Created: 06/24/2022 14:47:08
    Description: Autogenerated script file for the map metano_inn.
]]--
-- Commonly included lua functions and data
require 'common'
require 'PartnerEssentials'
require 'ground.metano_inn.metano_inn_ch_2'
require 'ground.metano_inn.metano_inn_ch_3'
require 'ground.metano_inn.metano_inn_ch_4'

-- Package name
local metano_inn = {}

-- Local, localized strings table
-- Use this to display the named strings you added in the strings files for the map!
-- Ex:
--      local localizedstring = MapStrings['SomeStringName']
local MapStrings = {}

-------------------------------
-- Map Callbacks
-------------------------------
---metano_inn.Init
--Engine callback function
function metano_inn.Init(map, time)
	DEBUG.EnableDbgCoro()
	print('=>> Init_metano_inn <<=')
	MapStrings = COMMON.AutoLoadLocalizedStrings()
	COMMON.RespawnAllies()
	PartnerEssentials.InitializePartnerSpawn()
	
	if SOUND:GetCurrentSong() ~= SV.metano_town.Song then
      SOUND:PlayBGM(SV.metano_town.Song, true)
    end
end

---metano_inn.Enter
--Engine callback function
function metano_inn.Enter(map, time)
	metano_inn.PlotScripting()

end

---metano_inn.Exit
--Engine callback function
function metano_inn.Exit(map, time)


end

---metano_inn.Update
--Engine callback function
function metano_inn.Update(map, time)


end

function metano_inn.GameLoad(map)
	PartnerEssentials.LoadGamePartnerPosition(CH('Teammate1'))
	metano_inn.PlotScripting()
end

function metano_inn.GameSave(map)
	PartnerEssentials.SaveGamePartnerPosition(CH('Teammate1'))
end


function metano_inn.PlotScripting()
	if SV.ChapterProgression.Chapter == 2 then 
		metano_inn_ch_2.SetupGround()
	elseif SV.ChapterProgression.Chapter == 3 then
		metano_inn_ch_3.SetupGround()
	elseif SV.ChapterProgression.Chapter == 4 then
		metano_inn_ch_4.SetupGround()
	else
		GAME:FadeIn(20)
	end
end


-------------------------------
-- Map Transitions
-------------------------------

function metano_inn.Inn_Entrance_Touch(obj, activator)
  DEBUG.EnableDbgCoro() --Enable debugging this coroutine
  GAME:FadeOut(false, 20)
  GAME:EnterGroundMap("metano_town", "Inn_Entrance_Marker", true)
  SV.partner.Spawn = 'Inn_Entrance_Marker_Partner'
end



------------------
--NPCS 
----------------
function metano_inn.Nidoking_Action(chara, activator)
  DEBUG.EnableDbgCoro() --Enable debugging this coroutine
  assert(pcall(load("metano_inn_ch_" .. tostring(SV.ChapterProgression.Chapter) .. ".Nidoking_Action(...,...)"), chara, activator))
end

function metano_inn.Nidoqueen_Action(chara, activator)
  DEBUG.EnableDbgCoro() --Enable debugging this coroutine
  assert(pcall(load("metano_inn_ch_" .. tostring(SV.ChapterProgression.Chapter) .. ".Nidoqueen_Action(...,...)"), chara, activator))
end

function metano_inn.Nidoran_M_Action(chara, activator)
  DEBUG.EnableDbgCoro() --Enable debugging this coroutine
  assert(pcall(load("metano_inn_ch_" .. tostring(SV.ChapterProgression.Chapter) .. ".Nidoran_M_Action(...,...)"), chara, activator))
end

function metano_inn.Nidorina_Action(chara, activator)
  DEBUG.EnableDbgCoro() --Enable debugging this coroutine
  assert(pcall(load("metano_inn_ch_" .. tostring(SV.ChapterProgression.Chapter) .. ".Nidorina_Action(...,...)"), chara, activator))
end


--the innkeeper desks are what you use to talk to the NPC behind the desk
function metano_inn.Innkeeper_Desk_Left_Action(chara, activator)
  DEBUG.EnableDbgCoro() --Enable debugging this coroutine
  assert(pcall(load("metano_inn_ch_" .. tostring(SV.ChapterProgression.Chapter) .. ".Innkeeper_Desk_Left_Action(...,...)"), chara, activator))
end

function metano_inn.Innkeeper_Desk_Right_Action(chara, activator)
  DEBUG.EnableDbgCoro() --Enable debugging this coroutine
  assert(pcall(load("metano_inn_ch_" .. tostring(SV.ChapterProgression.Chapter) .. ".Innkeeper_Desk_Right_Action(...,...)"), chara, activator))
end


function metano_inn.Zangoose_Action(chara, activator)
  DEBUG.EnableDbgCoro() --Enable debugging this coroutine
  assert(pcall(load("metano_inn_ch_" .. tostring(SV.ChapterProgression.Chapter) .. ".Zangoose_Action(...,...)"), chara, activator))
end

function metano_inn.Seviper_Action(chara, activator)
  DEBUG.EnableDbgCoro() --Enable debugging this coroutine
  assert(pcall(load("metano_inn_ch_" .. tostring(SV.ChapterProgression.Chapter) .. ".Seviper_Action(...,...)"), chara, activator))
end

--passersby are NPCs who are one-off NPCs who are people passing through town that are staying at the inn. These could be adventuring teams or it could be random NPCs
function metano_inn.Passerby_1_Action(chara, activator)
  DEBUG.EnableDbgCoro() --Enable debugging this coroutine
  assert(pcall(load("metano_inn_ch_" .. tostring(SV.ChapterProgression.Chapter) .. ".Passerby_1_Action(...,...)"), chara, activator))
end

function metano_inn.Passerby_2_Action(chara, activator)
  DEBUG.EnableDbgCoro() --Enable debugging this coroutine
  assert(pcall(load("metano_inn_ch_" .. tostring(SV.ChapterProgression.Chapter) .. ".Passerby_2_Action(...,...)"), chara, activator))
end







function metano_inn.Teammate1_Action(chara, activator)
  DEBUG.EnableDbgCoro() --Enable debugging this coroutine
  PartnerEssentials.GetPartnerDialogue(CH('Teammate1'))end

return metano_inn

